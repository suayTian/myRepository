version: '3'
services:
  springcloud-tian-mysql:
    image: springcloud-tian-mysql:1.0
    container_name: springcloud-tian-mysql #运行时的容器名称
    ports:
      - "3306:3306"
    volumes:
      - "/home/mysql/conf:/etc/mysql/mysql.conf.d"
      - "/home/mysql/data:/var/lib/mysql"
      - "/home/mysql/logs:/var/log/mysql"
    command: --default-authentication-plugin=mysql_native_password
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: 123456

  springcloud-tian-eureka:
    image: springcloud-tian-eureka:1.0 #构建时的镜像名称
    container_name: springcloud-tian-eureka #运行时的容器名称
    restart: always
    build:
      context: .
      dockerfile: Dockerfile-eureka
      args:
        buildno: 1
    ports:
      - "7001:7001"
      - "7002:7001"
      - "7003:7001"

  springcloud-tian-config:
    image: springcloud-tian-config:1.0 #构建时的镜像名称
    container_name: springcloud-tian-config #运行时的容器名称
    restart: always
    build:
      context: .
      dockerfile: Dockerfile-config
    ports:
      - "9003:9003"

  springcloud-tian-account:
    image: springcloud-tian-account:1.0 #构建时的镜像名称
    container_name: springcloud-tian-account #运行时的容器名称
    restart: always
    build:
      context: .
      dockerfile: Dockerfile-account
    ports:
      - "8003:8003"
    depends_on:
      - springcloud-tian-mysql

  springcloud-tian-admin:
    image: springcloud-tian-admin:1.0 #构建时的镜像名称
    container_name: springcloud-tian-admin #运行时的容器名称
    restart: always
    build:
      context: .
      dockerfile: Dockerfile-admin
    ports:
      - "9004:9004"

  springcloud-tian-company:
    image: springcloud-tian-company:1.0 #构建时的镜像名称
    container_name: springcloud-tian-company #运行时的容器名称
    restart: always
    build:
      context: .
      dockerfile: Dockerfile-company
    ports:
      - "8002:8002"
    depends_on:
      - springcloud-tian-mysql

  springcloud-tian-consumer:
    image: springcloud-tian-consumer:1.0 #构建时的镜像名称
    container_name: springcloud-tian-consumer #运行时的容器名称
    restart: always
    build:
      context: .
      dockerfile: Dockerfile-consumer
    ports:
      - "8080:8080"
    depends_on:
      - springcloud-tian-config

  springcloud-tian-gateway:
    image: springcloud-tian-gateway:1.0 #构建时的镜像名称
    container_name: springcloud-tian-gateway #运行时的容器名称
    restart: always
    build:
      context: .
      dockerfile: Dockerfile-gateway
    ports:
      - "9002:9002"

  springcloud-tian-user:
    image: springcloud-tian-user:1.0 #构建时的镜像名称
    container_name: springcloud-tian-user #运行时的容器名称
    restart: always
    build:
      context: .
      dockerfile: Dockerfile-user
    ports:
      - "8001:8001"
    depends_on:
      - springcloud-tian-config
      - springcloud-tian-mysql